@using MetaFrm.Control
@using MetaFrm.Maui.Devices
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web
@inherits BaseComponent

@switch (Factory.ProjectService.GetAttributeValue("Template.Name") ?? "")
{
    case "":
        <nav class="navbar navbar-expand-lg fixed-top navbar-dark bg-dark">
            <div class="container-fluid">
                <a class="navbar-brand" @onclick="() => this.OnMenuHomeClick()" href="#">
                    @if (!this.LogoImageUrl.IsNullOrEmpty() && this.LogoImageSize != null)
                    {
                        <img src="@this.LogoImageUrl" data-toggle="tooltip" title="@this.LogoText" width="@this.LogoImageSize.Value.Width" height="@this.LogoImageSize.Value.Height" />
                    }
                    else
                    {
                        @this.LogoText
                    }
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarColor02" aria-controls="navbarColor02" aria-expanded="false" aria-label="Toggle navigation" @onclick="this.ToggleNavMenu">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="@(this.NavMenuViewModel.CollapseNavMenu?this.NavMenuViewModel.Collapse:this.NavMenuViewModel.NotCollapse) navbar-collapse" id="navbarColor02">
                    <ul class="navbar-nav me-auto">
                        @foreach (ViewModels.MenuItem parentMenuItem in this.NavMenuViewModel.MenuItems)
                        {
                            if (parentMenuItem.AssemblyID == null || parentMenuItem.AssemblyID == 0 && parentMenuItem.Child.Count > 0)
                            {
                                <li class="nav-item dropdown">
                                    <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false" data-toggle="tooltip" title="@parentMenuItem.Description">@parentMenuItem.Name</a>
                                    <div class="dropdown-menu">
                                        @foreach (ViewModels.MenuItem menuItem in parentMenuItem.Child)
                                        {
                                            @if (Uri.IsWellFormedUriString(parentMenuItem.Description, UriKind.Absolute))
                                            {
                                                @if (Factory.Platform == DevicePlatform.Web || Factory.Platform == DevicePlatform.WinForms || Factory.Platform == DevicePlatform.WPF)
                                                {
                                                    <a class="dropdown-item" href="@menuItem.Description" target="_blank" data-toggle="tooltip" title="@menuItem.Description">&nbsp;&nbsp;@menuItem.Name</a>
                                                }
                                                else
                                                {
                                                    <a class="dropdown-item" @onclick="() => this.OnMenuClick(menuItem.Description)" href="#" data-toggle="tooltip" title="@menuItem.Description">&nbsp;&nbsp;@menuItem.Name</a>
                                                }
                                            }
                                            else
                                            {
                                                <a class="dropdown-item" @onclick="() => this.OnMenuClick(menuItem.MenuID, menuItem.AssemblyID, false)" href="#" data-toggle="tooltip" title="@menuItem.Description">&nbsp;&nbsp;@menuItem.Name</a>
                                            }
                                        }
                                    </div>
                                </li>
                            }
                            else
                            {
                                <li class="nav-item">
                                    @if (Uri.IsWellFormedUriString(parentMenuItem.Description, UriKind.Absolute))
                                    {
                                        @if (Factory.Platform == DevicePlatform.Web || Factory.Platform == DevicePlatform.WinForms || Factory.Platform == DevicePlatform.WPF)
                                        {
                                            <a class="nav-link" href="@parentMenuItem.Description" target="_blank" data-toggle="tooltip" title="@parentMenuItem.Description">@parentMenuItem.Name</a>
                                        }
                                        else
                                        {
                                            <a class="nav-link" @onclick="() => this.OnMenuClick(parentMenuItem.Description)" href="#" data-toggle="tooltip" title="@parentMenuItem.Description">@parentMenuItem.Name</a>
                                        }
                                    }
                                    else
                                    {
                                        <a class="nav-link" @onclick="() => this.OnMenuClick(parentMenuItem.MenuID, parentMenuItem.AssemblyID, false)" href="#" data-toggle="tooltip" title="@parentMenuItem.Description">@parentMenuItem.Name</a>
                                    }
                                </li>
                            }
                        }
                        <li class="nav-item">
                            <hr class="hr-s1" />
                        </li>
                    </ul>
                    <ul class="navbar-nav">
                        <AuthorizeView>
                            <Authorized>
                                <li class="nav-item me-2">
                                    <a class="nav-link" href="#" data-toggle="tooltip" title="@this.DisplayName" @onclick="this.OnProfileClick">
                                        @if (!this.ProfileImage.IsNullOrEmpty())
                                        {
                                            <img class="rounded-pill me-2" alt="Profile" width="30" height="30" src="@this.ProfileImage" />
                                        }
                                        @this.DisplayName
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <button type="button" class="btn btn-secondary py-1 my-1" @onclick="this.OnLogoutClick"><i class="bi bi-box-arrow-right" /> Sign out</button>
                                </li>
                            </Authorized>
                            <NotAuthorized>
                                <li class="nav-item me-2">
                                    <button type="button" class="btn btn-secondary py-1 my-1" @onclick="this.OnLoginClick"><i class="bi bi-box-arrow-in-left" /> Sign in</button>
                                </li>
                                <li class="nav-item me-2">
                                    <button type="button" class="btn btn-secondary py-1 my-1" @onclick="this.OnRegisterClick">Register</button>
                                </li>
                                <li class="nav-item me-2">
                                    <button type="button" class="btn btn-secondary py-1 my-1" @onclick="this.OnPasswordResetClick">Password Reset</button>
                                </li>
                            </NotAuthorized>
                        </AuthorizeView>
                    </ul>
                </div>
            </div>
        </nav>
        break;

    case "sneat":
        <aside id="layout-menu" class="layout-menu menu-vertical menu bg-menu-theme" data-bg-class="bg-menu-theme">
            <div class="app-brand demo ">
                <a href="#" class="app-brand-link">
                    <span class="app-brand-logo demo">
                        <img src="@this.LogoImageUrl" data-toggle="tooltip" title="@this.LogoText" width="@this.LogoImageSize.Value.Width" height="@this.LogoImageSize.Value.Height" />
                    </span>
                    <span class="app-brand-text demo menu-text fw-bolder ms-2">@this.LogoText</span>
                </a>

                <a href="#" @onclick="() => this.OnLayoutMenuExpandeClick()" class="layout-menu-toggle menu-link text-large ms-auto d-xl-none">
                    <i class="bx bx-chevron-left bx-sm align-middle"></i>
                </a>
            </div>
            <div class="menu-inner-shadow"></div>
            <ul class="menu-inner py-1 ps">
                @foreach (ViewModels.MenuItem parentMenuItem in this.NavMenuViewModel.MenuItems)
                {
                    if ((parentMenuItem.AssemblyID == null || parentMenuItem.AssemblyID == 0 && parentMenuItem.Child.Count > 0) || (parentMenuItem.AssemblyID != null && parentMenuItem.Child.Count == 0))
                    {
                        <li class="menu-item @(this.ActiveMenuID == parentMenuItem.MenuID ? "open active" : "")" style="">
                            @if (this.ActiveMenuID == parentMenuItem.MenuID)
                            {
                                <a href="#" class="menu-link @(parentMenuItem.Child.Count > 0 ? "menu-toggle" : "") active">
                                    <i class="menu-icon @parentMenuItem.Icon"></i>
                                    <div data-i18n="Layouts" data-toggle="tooltip" title="@parentMenuItem.Description">@parentMenuItem.Name</div>
                                </a>
                            }
                            else
                            {
                                @if (parentMenuItem.AssemblyID != null)
                                {
                                    <a href="#" @onclick="() => this.OnMenuClick(parentMenuItem.MenuID, parentMenuItem.AssemblyID, true)" class="menu-link @(parentMenuItem.Child.Count > 0 ? "menu-toggle" : "")">
                                        <i class="menu-icon @parentMenuItem.Icon"></i>
                                        <div data-i18n="Layouts" data-toggle="tooltip" title="@parentMenuItem.Description">@parentMenuItem.Name</div>
                                    </a>
                                }
                                else
                                {
                                    <a href="#" @onclick="() => this.OnOpenMenuClick(parentMenuItem.MenuID)" class="menu-link @(parentMenuItem.Child.Count > 0 ? "menu-toggle" : "")">
                                        <i class="menu-icon @parentMenuItem.Icon"></i>
                                        <div data-i18n="Layouts" data-toggle="tooltip" title="@parentMenuItem.Description">@parentMenuItem.Name</div>
                                    </a>
                                }
                            }

                            @if (parentMenuItem.Child.Count > 0)
                            {
                                <ul class="menu-sub">
                                    @foreach (ViewModels.MenuItem menuItem in parentMenuItem.Child)
                                    {
                                        @if (Uri.IsWellFormedUriString(parentMenuItem.Description, UriKind.Absolute))
                                        {
                                            @if (Factory.Platform == DevicePlatform.Web || Factory.Platform == DevicePlatform.WinForms || Factory.Platform == DevicePlatform.WPF)
                                            {
                                                <li class="menu-item @(this.ActiveAssemblyID == menuItem.AssemblyID ? "active" : "")">
                                                    <a href="@menuItem.Description" target="_blank" class="menu-link" data-toggle="tooltip" title="@menuItem.Description">
                                                        <div data-i18n="@menuItem.Name">@menuItem.Name</div>
                                                    </a>
                                                </li>
                                            }
                                            else
                                            {
                                                <li class="menu-item @(this.ActiveAssemblyID == menuItem.AssemblyID ? "active" : "")">
                                                    <a @onclick="() => this.OnMenuClick(menuItem.Description)" href="#" class="menu-link" data-toggle="tooltip" title="@menuItem.Description">
                                                        <div data-i18n="@menuItem.Name">@menuItem.Name</div>
                                                    </a>
                                                </li>
                                            }
                                        }
                                        else
                                        {
                                            <li class="menu-item @(this.ActiveAssemblyID == menuItem.AssemblyID ? "active" : "")">
                                                <a @onclick="() => this.OnMenuClick(menuItem.MenuID, menuItem.AssemblyID, false)" href="#" class="menu-link" data-toggle="tooltip" title="@menuItem.Description">
                                                    <div data-i18n="@menuItem.Name">@menuItem.Name</div>
                                                </a>
                                            </li>
                                        }
                                    }
                                </ul>
                            }
                        </li>
                    }
                    else
                    {
                        <li class="menu-item @(this.ActiveMenuID == parentMenuItem.MenuID ? "active" : "")">
                            @if (Uri.IsWellFormedUriString(parentMenuItem.Description, UriKind.Absolute))
                            {
                                @if (Factory.Platform == DevicePlatform.Web || Factory.Platform == DevicePlatform.WinForms || Factory.Platform == DevicePlatform.WPF)
                                {
                                    <a class="menu-link" href="@parentMenuItem.Description" target="_blank" data-toggle="tooltip" title="@parentMenuItem.Description">
                                        <i class="menu-icon @parentMenuItem.Icon"></i>
                                        <div data-i18n="Analytics">@parentMenuItem.Name</div>
                                    </a>
                                }
                                else
                                {
                                    <a class="menu-link" @onclick="() => this.OnMenuClick(parentMenuItem.Description)" href="#" data-toggle="tooltip" title="@parentMenuItem.Description">
                                        <i class="menu-icon @parentMenuItem.Icon"></i>
                                        <div data-i18n="Analytics">@parentMenuItem.Name</div>
                                    </a>
                                }

                            }
                            else
                            {
                                <a class="menu-link" @onclick="() => this.OnMenuClick(parentMenuItem.MenuID, parentMenuItem.AssemblyID, false)" href="#" data-toggle="tooltip" title="@parentMenuItem.Description">
                                    <i class="menu-icon @parentMenuItem.Icon"></i>
                                    <div data-i18n="Analytics">@parentMenuItem.Name</div>
                                </a>
                            }
                        </li>
                    }
                }
            </ul>
        </aside>
        break;
}